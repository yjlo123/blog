<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Siwei&#39;s Blog</title>
    <link>https://blog.siwei.dev/post/</link>
    <description>Recent content in Posts on Siwei&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 08 Sep 2020 11:30:40 +0800</lastBuildDate><atom:link href="https://blog.siwei.dev/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>My New PC</title>
      <link>https://blog.siwei.dev/post/my-new-pc/</link>
      <pubDate>Tue, 08 Sep 2020 11:30:40 +0800</pubDate>
      
      <guid>https://blog.siwei.dev/post/my-new-pc/</guid>
      <description>Part Name Price (SGD) Bought From     CPU AMD Ryzen 5 3600X 289.34 Amazon   MB ASUS TUF Gaming B550M-PLUS 221.40 Amazon   MEM Corsair Vengeance 3200 C16 16GB*2 152.21 Amazon   PSU Cooler Master Gold 550 Full Modular 105.00 Shopee   GPU ZOTAC Gaming GTX 1660 Super 324.00 Shopee   SSD Samsung 970 EVO Plus 500GB 138.37 Amazon   SSD Kingston A 2000 Nvme Pcie 500G 76.</description>
    </item>
    
    <item>
      <title>Why I Created Runtime Script</title>
      <link>https://blog.siwei.dev/post/why-i-created-runtime-script/</link>
      <pubDate>Sun, 26 Jan 2020 11:30:40 +0800</pubDate>
      
      <guid>https://blog.siwei.dev/post/why-i-created-runtime-script/</guid>
      <description>In 2016, the year I graduated from my university, I started implementing a scripting language, YJLO Script. It has a modern-style syntax since I borrowed a bunch of ideas from recent popular languages, such as Python, Golang, and Swift. It is implemented in JavaScript and interpreted directly in the browser.
The development process of YJLO Script is fun, I tried to push some commits to the repo very day with no gap for more than half year.</description>
    </item>
    
    <item>
      <title>Things to do After Purchasing a Domain</title>
      <link>https://blog.siwei.dev/post/things-to-do-after-purchasing-a-domain/</link>
      <pubDate>Sat, 02 Mar 2019 00:22:40 +0800</pubDate>
      
      <guid>https://blog.siwei.dev/post/things-to-do-after-purchasing-a-domain/</guid>
      <description>Yesterday, I purchased a new domain from Namecheap and realized there were a bunch of things to do to make the new webpage live. Here I listed some notes for future reference.
Setup HTTPS For certain domain suffixes, HTTPS is compulsory. For instance, .dev is a secure namespace and the website requires HTTPS to work in browser.
- Generate a new cert using certbot 1 2  # for example, your domain is domain.</description>
    </item>
    
    <item>
      <title>Captcha Service With Python and Redis</title>
      <link>https://blog.siwei.dev/post/captcha-service-with-python-and-redis/</link>
      <pubDate>Sun, 17 Feb 2019 18:27:13 +0800</pubDate>
      
      <guid>https://blog.siwei.dev/post/captcha-service-with-python-and-redis/</guid>
      <description>Intro While implementing my new personal website, I added a Contact page, on which people can send messages to me by filling a form.
This is a low-cost way to say something to the owner of the website. It can be anonymous, for instance, you can just type yo in the message box and click Send, then seconds later, I receive an email showing the message, and I have no idea who you are.</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://blog.siwei.dev/post/hello-world/</link>
      <pubDate>Sat, 16 Feb 2019 01:17:33 +0800</pubDate>
      
      <guid>https://blog.siwei.dev/post/hello-world/</guid>
      <description>Hello, I just set up my Hugo blog! :)</description>
    </item>
    
  </channel>
</rss>
