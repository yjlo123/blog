<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lc_tree on Siwei&#39;s Blog</title>
    <link>https://blog.siwei.dev/tags/lc_tree/</link>
    <description>Recent content in lc_tree on Siwei&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 21 Mar 2021 00:00:00 +0800</lastBuildDate><atom:link href="https://blog.siwei.dev/tags/lc_tree/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>101 Symmetric Tree</title>
      <link>https://blog.siwei.dev/leetcode/101-symmetric-tree/</link>
      <pubDate>Sat, 20 Mar 2021 00:00:00 +0800</pubDate>
      
      <guid>https://blog.siwei.dev/leetcode/101-symmetric-tree/</guid>
      <description>Given the root of a binary tree, check whether it is a mirror of itself (i.e., symmetric around its center).
Example 1:
 1/ \2 2/ \ / \3 4 4 3Input: root = [1,2,2,3,4,4,3]Output: trueExample 2:
 1/ \2 2\ \3 3Input: root = [1,2,2,null,3,null,3]Output: falseConstraints:
 The number of nodes in the tree is in the range [1, 1000].</description>
    </item>
    
    <item>
      <title>103 Binary Tree Zigzag Level Order Traversal</title>
      <link>https://blog.siwei.dev/leetcode/103-binary-tree-zigzag-level-order-traversal/</link>
      <pubDate>Sun, 21 Mar 2021 00:00:00 +0800</pubDate>
      
      <guid>https://blog.siwei.dev/leetcode/103-binary-tree-zigzag-level-order-traversal/</guid>
      <description>Given the root of a binary tree, return the zigzag level order traversal of its nodes&#39; values. (i.e., from left to right, then right to left for the next level and alternate between).
Example 1:
 3/ \9 20/ \15 7Input: root = [3,9,20,null,null,15,7]Output: [[3],[20,9],[15,7]]Example 2:
Input: root = [1]Output: [[1]]Example 3:
Input: root = []Output: []Constraints:
 The number of nodes in the tree is in the range [0, 2000].</description>
    </item>
    
  </channel>
</rss>
