<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Leetcodes on Siwei&#39;s Blog</title>
    <link>https://blog.siwei.dev/leetcode/</link>
    <description>Recent content in Leetcodes on Siwei&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 16 Feb 2019 01:17:33 +0800</lastBuildDate><atom:link href="https://blog.siwei.dev/leetcode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1 Two Sum</title>
      <link>https://blog.siwei.dev/leetcode/1-two-sum/</link>
      <pubDate>Sat, 16 Feb 2019 01:17:33 +0800</pubDate>
      
      <guid>https://blog.siwei.dev/leetcode/1-two-sum/</guid>
      <description>package main import ( &amp;quot;fmt&amp;quot; ) func twoSum(nums []int, target int) []int { d := make(map[int]int) for idx, num := range nums { if v, ok := d[num]; ok { return []int{v, idx} } d[target-num] = idx } return nil } func main() { arr := []int{2, 7, 11, 15} fmt.Println(twoSum(arr, 9)) } </description>
    </item>
    
    <item>
      <title>2 Add Two Number</title>
      <link>https://blog.siwei.dev/leetcode/2-add-two-number/</link>
      <pubDate>Sat, 16 Feb 2019 01:17:33 +0800</pubDate>
      
      <guid>https://blog.siwei.dev/leetcode/2-add-two-number/</guid>
      <description>package main import ( &amp;quot;fmt&amp;quot; ) type ListNode struct { Val int Next *ListNode } type intArr []int func (list *ListNode) toArr() []int { if list == nil { return []int{} } head := list var s []int for head != nil { s = append(s, head.Val) head = head.Next } return s } func (nums intArr) toList() *ListNode { if len(nums) == 0 { return nil } var head *ListNode = nil length := len(nums) for i, _ := range nums { num := nums[length-i-1] head = &amp;amp;ListNode{num, head} } return head } func addTwoNumbers(l1 *ListNode, l2 *ListNode) *ListNode { head := &amp;amp;ListNode{0, nil} result := head carry := 0 for l1 !</description>
    </item>
    
  </channel>
</rss>
