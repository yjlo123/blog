<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lc_sliding_window on Siwei&#39;s Blog</title>
    <link>https://blog.siwei.dev/tags/lc_sliding_window/</link>
    <description>Recent content in lc_sliding_window on Siwei&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 19 Sep 2021 00:00:00 -0400</lastBuildDate><atom:link href="https://blog.siwei.dev/tags/lc_sliding_window/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>3 Longest Substring Without Repeating Characters</title>
      <link>https://blog.siwei.dev/leetcode/3-longest-substring-without-repeating-characters/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0800</pubDate>
      
      <guid>https://blog.siwei.dev/leetcode/3-longest-substring-without-repeating-characters/</guid>
      <description>Given a string s, find the length of the longest substring without repeating characters.
Example 1:
Input: s = &amp;#34;abcabcbb&amp;#34;Output: 3Explanation: The answer is &amp;#34;abc&amp;#34;, with the length of 3. Example 2:
Input: s = &amp;#34;bbbbb&amp;#34;Output: 1Explanation: The answer is &amp;#34;b&amp;#34;, with the length of 1. Example 3:
Input: s = &amp;#34;pwwkew&amp;#34;Output: 3Explanation: The answer is &amp;#34;wke&amp;#34;, with the length of 3.Notice that the answer must be a substring, &amp;#34;pwke&amp;#34; is a subsequence and not a substring.</description>
    </item>
    
    <item>
      <title>567 Permutation in String</title>
      <link>https://blog.siwei.dev/leetcode/567-permutation-in-string/</link>
      <pubDate>Sun, 19 Sep 2021 00:00:00 -0400</pubDate>
      
      <guid>https://blog.siwei.dev/leetcode/567-permutation-in-string/</guid>
      <description>Given two strings s1 and s2, return true if s2 contains a permutation of s1, or false otherwise.
In other words, return true if one of s1&amp;rsquo;s permutations is the substring of s2.
Example 1:
Input: s1 = &amp;#34;ab&amp;#34;, s2 = &amp;#34;eidbaooo&amp;#34;Output: trueExplanation: s2 contains one permutation of s1 (&amp;#34;ba&amp;#34;). Example 2:
Input: s1 = &amp;#34;ab&amp;#34;, s2 = &amp;#34;eidboaoo&amp;#34;Output: false Constraints:
1 &amp;lt;= s1.length, s2.length &amp;lt;= 104 s1 and s2 consist of lowercase English letters.</description>
    </item>
    
  </channel>
</rss>
